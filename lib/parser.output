State 62 conflicts: 1 shift/reduce
State 65 conflicts: 1 shift/reduce
State 70 conflicts: 1 shift/reduce
State 85 conflicts: 1 shift/reduce
State 92 conflicts: 11 shift/reduce
State 93 conflicts: 1 shift/reduce
State 94 conflicts: 1 shift/reduce
State 95 conflicts: 1 shift/reduce
State 96 conflicts: 1 shift/reduce
State 97 conflicts: 1 shift/reduce
State 98 conflicts: 1 shift/reduce
State 100 conflicts: 1 shift/reduce
State 101 conflicts: 1 shift/reduce
State 102 conflicts: 1 shift/reduce
State 106 conflicts: 12 shift/reduce
State 108 conflicts: 11 shift/reduce
State 120 conflicts: 11 shift/reduce
State 121 conflicts: 11 shift/reduce
State 126 conflicts: 11 shift/reduce


Grammar

    0 $accept: program END

    1 program: clazz
    2        | program clazz

    3 $@1: %empty

    4 clazz: "class" TYPE_ID $@1 clazzbody

    5 $@2: %empty

    6 clazz: "class" TYPE_ID "extends" TYPE_ID $@2 clazzbody

    7 clazzbody: "{" body "}"

    8 body: %empty
    9     | body field
   10     | body method

   11 field: OBJ_ID ":" type ";"
   12      | OBJ_ID ":" type "<-" expr ";"

   13 method: OBJ_ID "(" formals ")" ":" type block

   14 type: TYPE_ID
   15     | "int32"
   16     | "bool"
   17     | "string"
   18     | "unit"

   19 formals: %empty
   20        | formal

   21 formal: form
   22       | formal "," form

   23 form: OBJ_ID ":" type

   24 $@3: %empty

   25 block: "{" $@3 exprs "}"

   26 exprs: expr
   27      | exprs ";" expr

   28 expr: "if" expr "then" expr
   29     | "if" expr "then" expr "else" expr
   30     | "while" expr "do" expr
   31     | "let" OBJ_ID ":" type "in" expr
   32     | "let" OBJ_ID ":" type "<-" expr "in" expr
   33     | OBJ_ID "<-" expr
   34     | "not" expr
   35     | "-" expr
   36     | "isnull" expr
   37     | expr "and" expr
   38     | expr "=" expr
   39     | expr "<" expr
   40     | expr "<=" expr
   41     | expr "+" expr
   42     | expr "-" expr
   43     | expr "*" expr
   44     | expr "/" expr
   45     | expr "^" expr
   46     | expr error expr

   47 $@4: %empty

   48 expr: OBJ_ID "(" $@4 args ")"

   49 $@5: %empty

   50 expr: expr "." OBJ_ID "(" $@5 args ")"
   51     | "new" TYPE_ID
   52     | OBJ_ID
   53     | "self"
   54     | literal
   55     | "(" ")"
   56     | "(" expr ")"
   57     | block

   58 args: %empty
   59     | arg

   60 arg: expr
   61    | arg "," expr

   62 literal: INTEGER_LIT
   63        | STRING_LIT
   64        | boolean

   65 boolean: "true"
   66        | "false"


Terminals, with rules where they appear

    END (0) 0
    error (256) 46
    INTEGER_LIT <std::string> (258) 62
    STRING_LIT <std::string> (259) 63
    TYPE_ID <std::string> (260) 4 6 14 51
    OBJ_ID <std::string> (261) 11 12 13 23 31 32 33 48 50 52
    "and" (262) 37
    "bool" (263) 16
    "class" (264) 4 6
    "do" (265) 30
    "else" (266) 29
    "extends" (267) 6
    "false" (268) 66
    "if" (269) 28 29
    "in" (270) 31 32
    "int32" (271) 15
    "isnull" (272) 36
    "let" (273) 31 32
    "new" (274) 51
    "not" (275) 34
    "self" (276) 53
    "string" (277) 17
    "then" (278) 28 29
    "true" (279) 65
    "unit" (280) 18
    "while" (281) 30
    "{" (282) 7 25
    "}" (283) 7 25
    "(" (284) 13 48 50 55 56
    ")" (285) 13 48 50 55 56
    ":" (286) 11 12 13 23 31 32
    ";" (287) 11 12 27
    "," (288) 22 61
    "+" (289) 41
    "-" (290) 35 42
    "*" (291) 43
    "/" (292) 44
    "^" (293) 45
    "." (294) 50
    "=" (295) 38
    "<" (296) 39
    "<=" (297) 40
    "<-" (298) 12 32 33
    UMIN (299)


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    program (46)
        on left: 1 2
        on right: 0 2
    clazz <Node> (47)
        on left: 4 6
        on right: 1 2
    $@1 (48)
        on left: 3
        on right: 4
    $@2 (49)
        on left: 5
        on right: 6
    clazzbody (50)
        on left: 7
        on right: 4 6
    body (51)
        on left: 8 9 10
        on right: 7 9 10
    field <Node> (52)
        on left: 11 12
        on right: 9
    method <Node> (53)
        on left: 13
        on right: 10
    type <std::string> (54)
        on left: 14 15 16 17 18
        on right: 11 12 13 23 31 32
    formals (55)
        on left: 19 20
        on right: 13
    formal (56)
        on left: 21 22
        on right: 20 22
    form <Node> (57)
        on left: 23
        on right: 21 22
    block <Node> (58)
        on left: 25
        on right: 13 57
    $@3 (59)
        on left: 24
        on right: 25
    exprs (60)
        on left: 26 27
        on right: 25 27
    expr <Node> (61)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 48 50 51 52 53 54 55 56 57
        on right: 12 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 50 56 60 61
    $@4 (62)
        on left: 47
        on right: 48
    $@5 (63)
        on left: 49
        on right: 50
    args (64)
        on left: 58 59
        on right: 48 50
    arg (65)
        on left: 60 61
        on right: 59 61
    literal <Node> (66)
        on left: 62 63 64
        on right: 54
    boolean <std::string> (67)
        on left: 65 66
        on right: 64


State 0

    0 $accept: • program END

    "class"  shift, and go to state 1

    program  go to state 2
    clazz    go to state 3


State 1

    4 clazz: "class" • TYPE_ID $@1 clazzbody
    6      | "class" • TYPE_ID "extends" TYPE_ID $@2 clazzbody

    TYPE_ID  shift, and go to state 4


State 2

    0 $accept: program • END
    2 program: program • clazz

    END      shift, and go to state 5
    "class"  shift, and go to state 1

    clazz  go to state 6


State 3

    1 program: clazz •

    $default  reduce using rule 1 (program)


State 4

    4 clazz: "class" TYPE_ID • $@1 clazzbody
    6      | "class" TYPE_ID • "extends" TYPE_ID $@2 clazzbody

    "extends"  shift, and go to state 7

    $default  reduce using rule 3 ($@1)

    $@1  go to state 8


State 5

    0 $accept: program END •

    $default  accept


State 6

    2 program: program clazz •

    $default  reduce using rule 2 (program)


State 7

    6 clazz: "class" TYPE_ID "extends" • TYPE_ID $@2 clazzbody

    TYPE_ID  shift, and go to state 9


State 8

    4 clazz: "class" TYPE_ID $@1 • clazzbody

    "{"  shift, and go to state 10

    clazzbody  go to state 11


State 9

    6 clazz: "class" TYPE_ID "extends" TYPE_ID • $@2 clazzbody

    $default  reduce using rule 5 ($@2)

    $@2  go to state 12


State 10

    7 clazzbody: "{" • body "}"

    $default  reduce using rule 8 (body)

    body  go to state 13


State 11

    4 clazz: "class" TYPE_ID $@1 clazzbody •

    $default  reduce using rule 4 (clazz)


State 12

    6 clazz: "class" TYPE_ID "extends" TYPE_ID $@2 • clazzbody

    "{"  shift, and go to state 10

    clazzbody  go to state 14


State 13

    7 clazzbody: "{" body • "}"
    9 body: body • field
   10     | body • method

    OBJ_ID  shift, and go to state 15
    "}"     shift, and go to state 16

    field   go to state 17
    method  go to state 18


State 14

    6 clazz: "class" TYPE_ID "extends" TYPE_ID $@2 clazzbody •

    $default  reduce using rule 6 (clazz)


State 15

   11 field: OBJ_ID • ":" type ";"
   12      | OBJ_ID • ":" type "<-" expr ";"
   13 method: OBJ_ID • "(" formals ")" ":" type block

    "("  shift, and go to state 19
    ":"  shift, and go to state 20


State 16

    7 clazzbody: "{" body "}" •

    $default  reduce using rule 7 (clazzbody)


State 17

    9 body: body field •

    $default  reduce using rule 9 (body)


State 18

   10 body: body method •

    $default  reduce using rule 10 (body)


State 19

   13 method: OBJ_ID "(" • formals ")" ":" type block

    OBJ_ID  shift, and go to state 21

    $default  reduce using rule 19 (formals)

    formals  go to state 22
    formal   go to state 23
    form     go to state 24


State 20

   11 field: OBJ_ID ":" • type ";"
   12      | OBJ_ID ":" • type "<-" expr ";"

    TYPE_ID   shift, and go to state 25
    "bool"    shift, and go to state 26
    "int32"   shift, and go to state 27
    "string"  shift, and go to state 28
    "unit"    shift, and go to state 29

    type  go to state 30


State 21

   23 form: OBJ_ID • ":" type

    ":"  shift, and go to state 31


State 22

   13 method: OBJ_ID "(" formals • ")" ":" type block

    ")"  shift, and go to state 32


State 23

   20 formals: formal •
   22 formal: formal • "," form

    ","  shift, and go to state 33

    $default  reduce using rule 20 (formals)


State 24

   21 formal: form •

    $default  reduce using rule 21 (formal)


State 25

   14 type: TYPE_ID •

    $default  reduce using rule 14 (type)


State 26

   16 type: "bool" •

    $default  reduce using rule 16 (type)


State 27

   15 type: "int32" •

    $default  reduce using rule 15 (type)


State 28

   17 type: "string" •

    $default  reduce using rule 17 (type)


State 29

   18 type: "unit" •

    $default  reduce using rule 18 (type)


State 30

   11 field: OBJ_ID ":" type • ";"
   12      | OBJ_ID ":" type • "<-" expr ";"

    ";"   shift, and go to state 34
    "<-"  shift, and go to state 35


State 31

   23 form: OBJ_ID ":" • type

    TYPE_ID   shift, and go to state 25
    "bool"    shift, and go to state 26
    "int32"   shift, and go to state 27
    "string"  shift, and go to state 28
    "unit"    shift, and go to state 29

    type  go to state 36


State 32

   13 method: OBJ_ID "(" formals ")" • ":" type block

    ":"  shift, and go to state 37


State 33

   22 formal: formal "," • form

    OBJ_ID  shift, and go to state 21

    form  go to state 38


State 34

   11 field: OBJ_ID ":" type ";" •

    $default  reduce using rule 11 (field)


State 35

   12 field: OBJ_ID ":" type "<-" • expr ";"

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 55
    literal  go to state 56
    boolean  go to state 57


State 36

   23 form: OBJ_ID ":" type •

    $default  reduce using rule 23 (form)


State 37

   13 method: OBJ_ID "(" formals ")" ":" • type block

    TYPE_ID   shift, and go to state 25
    "bool"    shift, and go to state 26
    "int32"   shift, and go to state 27
    "string"  shift, and go to state 28
    "unit"    shift, and go to state 29

    type  go to state 58


State 38

   22 formal: formal "," form •

    $default  reduce using rule 22 (formal)


State 39

   62 literal: INTEGER_LIT •

    $default  reduce using rule 62 (literal)


State 40

   63 literal: STRING_LIT •

    $default  reduce using rule 63 (literal)


State 41

   33 expr: OBJ_ID • "<-" expr
   48     | OBJ_ID • "(" $@4 args ")"
   52     | OBJ_ID •

    "("   shift, and go to state 59
    "<-"  shift, and go to state 60

    $default  reduce using rule 52 (expr)


State 42

   66 boolean: "false" •

    $default  reduce using rule 66 (boolean)


State 43

   28 expr: "if" • expr "then" expr
   29     | "if" • expr "then" expr "else" expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 61
    literal  go to state 56
    boolean  go to state 57


State 44

   36 expr: "isnull" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 62
    literal  go to state 56
    boolean  go to state 57


State 45

   31 expr: "let" • OBJ_ID ":" type "in" expr
   32     | "let" • OBJ_ID ":" type "<-" expr "in" expr

    OBJ_ID  shift, and go to state 63


State 46

   51 expr: "new" • TYPE_ID

    TYPE_ID  shift, and go to state 64


State 47

   34 expr: "not" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 65
    literal  go to state 56
    boolean  go to state 57


State 48

   53 expr: "self" •

    $default  reduce using rule 53 (expr)


State 49

   65 boolean: "true" •

    $default  reduce using rule 65 (boolean)


State 50

   30 expr: "while" • expr "do" expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 66
    literal  go to state 56
    boolean  go to state 57


State 51

   25 block: "{" • $@3 exprs "}"

    $default  reduce using rule 24 ($@3)

    $@3  go to state 67


State 52

   55 expr: "(" • ")"
   56     | "(" • expr ")"

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    ")"          shift, and go to state 68
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 69
    literal  go to state 56
    boolean  go to state 57


State 53

   35 expr: "-" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 70
    literal  go to state 56
    boolean  go to state 57


State 54

   57 expr: block •

    $default  reduce using rule 57 (expr)


State 55

   12 field: OBJ_ID ":" type "<-" expr • ";"
   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    ";"    shift, and go to state 73
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82


State 56

   54 expr: literal •

    $default  reduce using rule 54 (expr)


State 57

   64 literal: boolean •

    $default  reduce using rule 64 (literal)


State 58

   13 method: OBJ_ID "(" formals ")" ":" type • block

    "{"  shift, and go to state 51

    block  go to state 83


State 59

   48 expr: OBJ_ID "(" • $@4 args ")"

    $default  reduce using rule 47 ($@4)

    $@4  go to state 84


State 60

   33 expr: OBJ_ID "<-" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 85
    literal  go to state 56
    boolean  go to state 57


State 61

   28 expr: "if" expr • "then" expr
   29     | "if" expr • "then" expr "else" expr
   37     | expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error   shift, and go to state 71
    "and"   shift, and go to state 72
    "then"  shift, and go to state 86
    "+"     shift, and go to state 74
    "-"     shift, and go to state 75
    "*"     shift, and go to state 76
    "/"     shift, and go to state 77
    "^"     shift, and go to state 78
    "."     shift, and go to state 79
    "="     shift, and go to state 80
    "<"     shift, and go to state 81
    "<="    shift, and go to state 82


State 62

   36 expr: "isnull" expr •
   37     | expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "^"    shift, and go to state 78
    "."    shift, and go to state 79

    error   [reduce using rule 36 (expr)]
    "and"   reduce using rule 36 (expr)
    "do"    reduce using rule 36 (expr)
    "else"  reduce using rule 36 (expr)
    "in"    reduce using rule 36 (expr)
    "then"  reduce using rule 36 (expr)
    "}"     reduce using rule 36 (expr)
    ")"     reduce using rule 36 (expr)
    ";"     reduce using rule 36 (expr)
    ","     reduce using rule 36 (expr)
    "+"     reduce using rule 36 (expr)
    "-"     reduce using rule 36 (expr)
    "*"     reduce using rule 36 (expr)
    "/"     reduce using rule 36 (expr)
    "="     reduce using rule 36 (expr)
    "<"     reduce using rule 36 (expr)
    "<="    reduce using rule 36 (expr)


State 63

   31 expr: "let" OBJ_ID • ":" type "in" expr
   32     | "let" OBJ_ID • ":" type "<-" expr "in" expr

    ":"  shift, and go to state 87


State 64

   51 expr: "new" TYPE_ID •

    $default  reduce using rule 51 (expr)


State 65

   34 expr: "not" expr •
   37     | expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82

    error   [reduce using rule 34 (expr)]
    "and"   reduce using rule 34 (expr)
    "do"    reduce using rule 34 (expr)
    "else"  reduce using rule 34 (expr)
    "in"    reduce using rule 34 (expr)
    "then"  reduce using rule 34 (expr)
    "}"     reduce using rule 34 (expr)
    ")"     reduce using rule 34 (expr)
    ";"     reduce using rule 34 (expr)
    ","     reduce using rule 34 (expr)


State 66

   30 expr: "while" expr • "do" expr
   37     | expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    "do"   shift, and go to state 88
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82


State 67

   25 block: "{" $@3 • exprs "}"

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    exprs    go to state 89
    expr     go to state 90
    literal  go to state 56
    boolean  go to state 57


State 68

   55 expr: "(" ")" •

    $default  reduce using rule 55 (expr)


State 69

   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"
   56     | "(" expr • ")"

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    ")"    shift, and go to state 91
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82


State 70

   35 expr: "-" expr •
   37     | expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "^"    shift, and go to state 78
    "."    shift, and go to state 79

    error   [reduce using rule 35 (expr)]
    "and"   reduce using rule 35 (expr)
    "do"    reduce using rule 35 (expr)
    "else"  reduce using rule 35 (expr)
    "in"    reduce using rule 35 (expr)
    "then"  reduce using rule 35 (expr)
    "}"     reduce using rule 35 (expr)
    ")"     reduce using rule 35 (expr)
    ";"     reduce using rule 35 (expr)
    ","     reduce using rule 35 (expr)
    "+"     reduce using rule 35 (expr)
    "-"     reduce using rule 35 (expr)
    "*"     reduce using rule 35 (expr)
    "/"     reduce using rule 35 (expr)
    "="     reduce using rule 35 (expr)
    "<"     reduce using rule 35 (expr)
    "<="    reduce using rule 35 (expr)


State 71

   46 expr: expr error • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 92
    literal  go to state 56
    boolean  go to state 57


State 72

   37 expr: expr "and" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 93
    literal  go to state 56
    boolean  go to state 57


State 73

   12 field: OBJ_ID ":" type "<-" expr ";" •

    $default  reduce using rule 12 (field)


State 74

   41 expr: expr "+" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 94
    literal  go to state 56
    boolean  go to state 57


State 75

   42 expr: expr "-" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 95
    literal  go to state 56
    boolean  go to state 57


State 76

   43 expr: expr "*" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 96
    literal  go to state 56
    boolean  go to state 57


State 77

   44 expr: expr "/" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 97
    literal  go to state 56
    boolean  go to state 57


State 78

   45 expr: expr "^" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 98
    literal  go to state 56
    boolean  go to state 57


State 79

   50 expr: expr "." • OBJ_ID "(" $@5 args ")"

    OBJ_ID  shift, and go to state 99


State 80

   38 expr: expr "=" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 100
    literal  go to state 56
    boolean  go to state 57


State 81

   39 expr: expr "<" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 101
    literal  go to state 56
    boolean  go to state 57


State 82

   40 expr: expr "<=" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 102
    literal  go to state 56
    boolean  go to state 57


State 83

   13 method: OBJ_ID "(" formals ")" ":" type block •

    $default  reduce using rule 13 (method)


State 84

   48 expr: OBJ_ID "(" $@4 • args ")"

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    $default  reduce using rule 58 (args)

    block    go to state 54
    expr     go to state 103
    args     go to state 104
    arg      go to state 105
    literal  go to state 56
    boolean  go to state 57


State 85

   33 expr: OBJ_ID "<-" expr •
   37     | expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82

    error   [reduce using rule 33 (expr)]
    "do"    reduce using rule 33 (expr)
    "else"  reduce using rule 33 (expr)
    "in"    reduce using rule 33 (expr)
    "then"  reduce using rule 33 (expr)
    "}"     reduce using rule 33 (expr)
    ")"     reduce using rule 33 (expr)
    ";"     reduce using rule 33 (expr)
    ","     reduce using rule 33 (expr)


State 86

   28 expr: "if" expr "then" • expr
   29     | "if" expr "then" • expr "else" expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 106
    literal  go to state 56
    boolean  go to state 57


State 87

   31 expr: "let" OBJ_ID ":" • type "in" expr
   32     | "let" OBJ_ID ":" • type "<-" expr "in" expr

    TYPE_ID   shift, and go to state 25
    "bool"    shift, and go to state 26
    "int32"   shift, and go to state 27
    "string"  shift, and go to state 28
    "unit"    shift, and go to state 29

    type  go to state 107


State 88

   30 expr: "while" expr "do" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 108
    literal  go to state 56
    boolean  go to state 57


State 89

   25 block: "{" $@3 exprs • "}"
   27 exprs: exprs • ";" expr

    "}"  shift, and go to state 109
    ";"  shift, and go to state 110


State 90

   26 exprs: expr •
   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82

    "}"  reduce using rule 26 (exprs)
    ";"  reduce using rule 26 (exprs)


State 91

   56 expr: "(" expr ")" •

    $default  reduce using rule 56 (expr)


State 92

   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   46     | expr error expr •
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82

    error   [reduce using rule 46 (expr)]
    "and"   [reduce using rule 46 (expr)]
    "do"    reduce using rule 46 (expr)
    "else"  reduce using rule 46 (expr)
    "in"    reduce using rule 46 (expr)
    "then"  reduce using rule 46 (expr)
    "}"     reduce using rule 46 (expr)
    ")"     reduce using rule 46 (expr)
    ";"     reduce using rule 46 (expr)
    ","     reduce using rule 46 (expr)
    "+"     [reduce using rule 46 (expr)]
    "-"     [reduce using rule 46 (expr)]
    "*"     [reduce using rule 46 (expr)]
    "/"     [reduce using rule 46 (expr)]
    "^"     [reduce using rule 46 (expr)]
    "."     [reduce using rule 46 (expr)]
    "="     [reduce using rule 46 (expr)]
    "<"     [reduce using rule 46 (expr)]
    "<="    [reduce using rule 46 (expr)]


State 93

   37 expr: expr • "and" expr
   37     | expr "and" expr •
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82

    error   [reduce using rule 37 (expr)]
    "and"   reduce using rule 37 (expr)
    "do"    reduce using rule 37 (expr)
    "else"  reduce using rule 37 (expr)
    "in"    reduce using rule 37 (expr)
    "then"  reduce using rule 37 (expr)
    "}"     reduce using rule 37 (expr)
    ")"     reduce using rule 37 (expr)
    ";"     reduce using rule 37 (expr)
    ","     reduce using rule 37 (expr)


State 94

   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   41     | expr "+" expr •
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79

    error   [reduce using rule 41 (expr)]
    "and"   reduce using rule 41 (expr)
    "do"    reduce using rule 41 (expr)
    "else"  reduce using rule 41 (expr)
    "in"    reduce using rule 41 (expr)
    "then"  reduce using rule 41 (expr)
    "}"     reduce using rule 41 (expr)
    ")"     reduce using rule 41 (expr)
    ";"     reduce using rule 41 (expr)
    ","     reduce using rule 41 (expr)
    "+"     reduce using rule 41 (expr)
    "-"     reduce using rule 41 (expr)
    "="     reduce using rule 41 (expr)
    "<"     reduce using rule 41 (expr)
    "<="    reduce using rule 41 (expr)


State 95

   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   42     | expr "-" expr •
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79

    error   [reduce using rule 42 (expr)]
    "and"   reduce using rule 42 (expr)
    "do"    reduce using rule 42 (expr)
    "else"  reduce using rule 42 (expr)
    "in"    reduce using rule 42 (expr)
    "then"  reduce using rule 42 (expr)
    "}"     reduce using rule 42 (expr)
    ")"     reduce using rule 42 (expr)
    ";"     reduce using rule 42 (expr)
    ","     reduce using rule 42 (expr)
    "+"     reduce using rule 42 (expr)
    "-"     reduce using rule 42 (expr)
    "="     reduce using rule 42 (expr)
    "<"     reduce using rule 42 (expr)
    "<="    reduce using rule 42 (expr)


State 96

   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   43     | expr "*" expr •
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "^"    shift, and go to state 78
    "."    shift, and go to state 79

    error   [reduce using rule 43 (expr)]
    "and"   reduce using rule 43 (expr)
    "do"    reduce using rule 43 (expr)
    "else"  reduce using rule 43 (expr)
    "in"    reduce using rule 43 (expr)
    "then"  reduce using rule 43 (expr)
    "}"     reduce using rule 43 (expr)
    ")"     reduce using rule 43 (expr)
    ";"     reduce using rule 43 (expr)
    ","     reduce using rule 43 (expr)
    "+"     reduce using rule 43 (expr)
    "-"     reduce using rule 43 (expr)
    "*"     reduce using rule 43 (expr)
    "/"     reduce using rule 43 (expr)
    "="     reduce using rule 43 (expr)
    "<"     reduce using rule 43 (expr)
    "<="    reduce using rule 43 (expr)


State 97

   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   44     | expr "/" expr •
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "^"    shift, and go to state 78
    "."    shift, and go to state 79

    error   [reduce using rule 44 (expr)]
    "and"   reduce using rule 44 (expr)
    "do"    reduce using rule 44 (expr)
    "else"  reduce using rule 44 (expr)
    "in"    reduce using rule 44 (expr)
    "then"  reduce using rule 44 (expr)
    "}"     reduce using rule 44 (expr)
    ")"     reduce using rule 44 (expr)
    ";"     reduce using rule 44 (expr)
    ","     reduce using rule 44 (expr)
    "+"     reduce using rule 44 (expr)
    "-"     reduce using rule 44 (expr)
    "*"     reduce using rule 44 (expr)
    "/"     reduce using rule 44 (expr)
    "="     reduce using rule 44 (expr)
    "<"     reduce using rule 44 (expr)
    "<="    reduce using rule 44 (expr)


State 98

   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   45     | expr "^" expr •
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "^"    shift, and go to state 78
    "."    shift, and go to state 79

    error   [reduce using rule 45 (expr)]
    "and"   reduce using rule 45 (expr)
    "do"    reduce using rule 45 (expr)
    "else"  reduce using rule 45 (expr)
    "in"    reduce using rule 45 (expr)
    "then"  reduce using rule 45 (expr)
    "}"     reduce using rule 45 (expr)
    ")"     reduce using rule 45 (expr)
    ";"     reduce using rule 45 (expr)
    ","     reduce using rule 45 (expr)
    "+"     reduce using rule 45 (expr)
    "-"     reduce using rule 45 (expr)
    "*"     reduce using rule 45 (expr)
    "/"     reduce using rule 45 (expr)
    "="     reduce using rule 45 (expr)
    "<"     reduce using rule 45 (expr)
    "<="    reduce using rule 45 (expr)


State 99

   50 expr: expr "." OBJ_ID • "(" $@5 args ")"

    "("  shift, and go to state 111


State 100

   37 expr: expr • "and" expr
   38     | expr • "=" expr
   38     | expr "=" expr •
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79

    "="   error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)

    error   [reduce using rule 38 (expr)]
    "and"   reduce using rule 38 (expr)
    "do"    reduce using rule 38 (expr)
    "else"  reduce using rule 38 (expr)
    "in"    reduce using rule 38 (expr)
    "then"  reduce using rule 38 (expr)
    "}"     reduce using rule 38 (expr)
    ")"     reduce using rule 38 (expr)
    ";"     reduce using rule 38 (expr)
    ","     reduce using rule 38 (expr)


State 101

   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   39     | expr "<" expr •
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79

    "="   error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)

    error   [reduce using rule 39 (expr)]
    "and"   reduce using rule 39 (expr)
    "do"    reduce using rule 39 (expr)
    "else"  reduce using rule 39 (expr)
    "in"    reduce using rule 39 (expr)
    "then"  reduce using rule 39 (expr)
    "}"     reduce using rule 39 (expr)
    ")"     reduce using rule 39 (expr)
    ";"     reduce using rule 39 (expr)
    ","     reduce using rule 39 (expr)


State 102

   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   40     | expr "<=" expr •
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79

    "="   error (nonassociative)
    "<"   error (nonassociative)
    "<="  error (nonassociative)

    error   [reduce using rule 40 (expr)]
    "and"   reduce using rule 40 (expr)
    "do"    reduce using rule 40 (expr)
    "else"  reduce using rule 40 (expr)
    "in"    reduce using rule 40 (expr)
    "then"  reduce using rule 40 (expr)
    "}"     reduce using rule 40 (expr)
    ")"     reduce using rule 40 (expr)
    ";"     reduce using rule 40 (expr)
    ","     reduce using rule 40 (expr)


State 103

   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"
   60 arg: expr •

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82

    ")"  reduce using rule 60 (arg)
    ","  reduce using rule 60 (arg)


State 104

   48 expr: OBJ_ID "(" $@4 args • ")"

    ")"  shift, and go to state 112


State 105

   59 args: arg •
   61 arg: arg • "," expr

    ","  shift, and go to state 113

    $default  reduce using rule 59 (args)


State 106

   28 expr: "if" expr "then" expr •
   29     | "if" expr "then" expr • "else" expr
   37     | expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error   shift, and go to state 71
    "and"   shift, and go to state 72
    "else"  shift, and go to state 114
    "+"     shift, and go to state 74
    "-"     shift, and go to state 75
    "*"     shift, and go to state 76
    "/"     shift, and go to state 77
    "^"     shift, and go to state 78
    "."     shift, and go to state 79
    "="     shift, and go to state 80
    "<"     shift, and go to state 81
    "<="    shift, and go to state 82

    error   [reduce using rule 28 (expr)]
    "and"   [reduce using rule 28 (expr)]
    "do"    reduce using rule 28 (expr)
    "else"  [reduce using rule 28 (expr)]
    "in"    reduce using rule 28 (expr)
    "then"  reduce using rule 28 (expr)
    "}"     reduce using rule 28 (expr)
    ")"     reduce using rule 28 (expr)
    ";"     reduce using rule 28 (expr)
    ","     reduce using rule 28 (expr)
    "+"     [reduce using rule 28 (expr)]
    "-"     [reduce using rule 28 (expr)]
    "*"     [reduce using rule 28 (expr)]
    "/"     [reduce using rule 28 (expr)]
    "^"     [reduce using rule 28 (expr)]
    "."     [reduce using rule 28 (expr)]
    "="     [reduce using rule 28 (expr)]
    "<"     [reduce using rule 28 (expr)]
    "<="    [reduce using rule 28 (expr)]


State 107

   31 expr: "let" OBJ_ID ":" type • "in" expr
   32     | "let" OBJ_ID ":" type • "<-" expr "in" expr

    "in"  shift, and go to state 115
    "<-"  shift, and go to state 116


State 108

   30 expr: "while" expr "do" expr •
   37     | expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82

    error   [reduce using rule 30 (expr)]
    "and"   [reduce using rule 30 (expr)]
    "do"    reduce using rule 30 (expr)
    "else"  reduce using rule 30 (expr)
    "in"    reduce using rule 30 (expr)
    "then"  reduce using rule 30 (expr)
    "}"     reduce using rule 30 (expr)
    ")"     reduce using rule 30 (expr)
    ";"     reduce using rule 30 (expr)
    ","     reduce using rule 30 (expr)
    "+"     [reduce using rule 30 (expr)]
    "-"     [reduce using rule 30 (expr)]
    "*"     [reduce using rule 30 (expr)]
    "/"     [reduce using rule 30 (expr)]
    "^"     [reduce using rule 30 (expr)]
    "."     [reduce using rule 30 (expr)]
    "="     [reduce using rule 30 (expr)]
    "<"     [reduce using rule 30 (expr)]
    "<="    [reduce using rule 30 (expr)]


State 109

   25 block: "{" $@3 exprs "}" •

    $default  reduce using rule 25 (block)


State 110

   27 exprs: exprs ";" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 117
    literal  go to state 56
    boolean  go to state 57


State 111

   50 expr: expr "." OBJ_ID "(" • $@5 args ")"

    $default  reduce using rule 49 ($@5)

    $@5  go to state 118


State 112

   48 expr: OBJ_ID "(" $@4 args ")" •

    $default  reduce using rule 48 (expr)


State 113

   61 arg: arg "," • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 119
    literal  go to state 56
    boolean  go to state 57


State 114

   29 expr: "if" expr "then" expr "else" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 120
    literal  go to state 56
    boolean  go to state 57


State 115

   31 expr: "let" OBJ_ID ":" type "in" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 121
    literal  go to state 56
    boolean  go to state 57


State 116

   32 expr: "let" OBJ_ID ":" type "<-" • expr "in" expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 122
    literal  go to state 56
    boolean  go to state 57


State 117

   27 exprs: exprs ";" expr •
   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82

    "}"  reduce using rule 27 (exprs)
    ";"  reduce using rule 27 (exprs)


State 118

   50 expr: expr "." OBJ_ID "(" $@5 • args ")"

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    $default  reduce using rule 58 (args)

    block    go to state 54
    expr     go to state 103
    args     go to state 123
    arg      go to state 105
    literal  go to state 56
    boolean  go to state 57


State 119

   37 expr: expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"
   61 arg: arg "," expr •

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82

    ")"  reduce using rule 61 (arg)
    ","  reduce using rule 61 (arg)


State 120

   29 expr: "if" expr "then" expr "else" expr •
   37     | expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82

    error   [reduce using rule 29 (expr)]
    "and"   [reduce using rule 29 (expr)]
    "do"    reduce using rule 29 (expr)
    "else"  reduce using rule 29 (expr)
    "in"    reduce using rule 29 (expr)
    "then"  reduce using rule 29 (expr)
    "}"     reduce using rule 29 (expr)
    ")"     reduce using rule 29 (expr)
    ";"     reduce using rule 29 (expr)
    ","     reduce using rule 29 (expr)
    "+"     [reduce using rule 29 (expr)]
    "-"     [reduce using rule 29 (expr)]
    "*"     [reduce using rule 29 (expr)]
    "/"     [reduce using rule 29 (expr)]
    "^"     [reduce using rule 29 (expr)]
    "."     [reduce using rule 29 (expr)]
    "="     [reduce using rule 29 (expr)]
    "<"     [reduce using rule 29 (expr)]
    "<="    [reduce using rule 29 (expr)]


State 121

   31 expr: "let" OBJ_ID ":" type "in" expr •
   37     | expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82

    error   [reduce using rule 31 (expr)]
    "and"   [reduce using rule 31 (expr)]
    "do"    reduce using rule 31 (expr)
    "else"  reduce using rule 31 (expr)
    "in"    reduce using rule 31 (expr)
    "then"  reduce using rule 31 (expr)
    "}"     reduce using rule 31 (expr)
    ")"     reduce using rule 31 (expr)
    ";"     reduce using rule 31 (expr)
    ","     reduce using rule 31 (expr)
    "+"     [reduce using rule 31 (expr)]
    "-"     [reduce using rule 31 (expr)]
    "*"     [reduce using rule 31 (expr)]
    "/"     [reduce using rule 31 (expr)]
    "^"     [reduce using rule 31 (expr)]
    "."     [reduce using rule 31 (expr)]
    "="     [reduce using rule 31 (expr)]
    "<"     [reduce using rule 31 (expr)]
    "<="    [reduce using rule 31 (expr)]


State 122

   32 expr: "let" OBJ_ID ":" type "<-" expr • "in" expr
   37     | expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    "in"   shift, and go to state 124
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82


State 123

   50 expr: expr "." OBJ_ID "(" $@5 args • ")"

    ")"  shift, and go to state 125


State 124

   32 expr: "let" OBJ_ID ":" type "<-" expr "in" • expr

    INTEGER_LIT  shift, and go to state 39
    STRING_LIT   shift, and go to state 40
    OBJ_ID       shift, and go to state 41
    "false"      shift, and go to state 42
    "if"         shift, and go to state 43
    "isnull"     shift, and go to state 44
    "let"        shift, and go to state 45
    "new"        shift, and go to state 46
    "not"        shift, and go to state 47
    "self"       shift, and go to state 48
    "true"       shift, and go to state 49
    "while"      shift, and go to state 50
    "{"          shift, and go to state 51
    "("          shift, and go to state 52
    "-"          shift, and go to state 53

    block    go to state 54
    expr     go to state 126
    literal  go to state 56
    boolean  go to state 57


State 125

   50 expr: expr "." OBJ_ID "(" $@5 args ")" •

    $default  reduce using rule 50 (expr)


State 126

   32 expr: "let" OBJ_ID ":" type "<-" expr "in" expr •
   37     | expr • "and" expr
   38     | expr • "=" expr
   39     | expr • "<" expr
   40     | expr • "<=" expr
   41     | expr • "+" expr
   42     | expr • "-" expr
   43     | expr • "*" expr
   44     | expr • "/" expr
   45     | expr • "^" expr
   46     | expr • error expr
   50     | expr • "." OBJ_ID "(" $@5 args ")"

    error  shift, and go to state 71
    "and"  shift, and go to state 72
    "+"    shift, and go to state 74
    "-"    shift, and go to state 75
    "*"    shift, and go to state 76
    "/"    shift, and go to state 77
    "^"    shift, and go to state 78
    "."    shift, and go to state 79
    "="    shift, and go to state 80
    "<"    shift, and go to state 81
    "<="   shift, and go to state 82

    error   [reduce using rule 32 (expr)]
    "and"   [reduce using rule 32 (expr)]
    "do"    reduce using rule 32 (expr)
    "else"  reduce using rule 32 (expr)
    "in"    reduce using rule 32 (expr)
    "then"  reduce using rule 32 (expr)
    "}"     reduce using rule 32 (expr)
    ")"     reduce using rule 32 (expr)
    ";"     reduce using rule 32 (expr)
    ","     reduce using rule 32 (expr)
    "+"     [reduce using rule 32 (expr)]
    "-"     [reduce using rule 32 (expr)]
    "*"     [reduce using rule 32 (expr)]
    "/"     [reduce using rule 32 (expr)]
    "^"     [reduce using rule 32 (expr)]
    "."     [reduce using rule 32 (expr)]
    "="     [reduce using rule 32 (expr)]
    "<"     [reduce using rule 32 (expr)]
    "<="    [reduce using rule 32 (expr)]
